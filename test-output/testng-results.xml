<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-09T09:42:01 PDT" name="Suite" finished-at="2024-04-09T09:42:28 PDT" duration-ms="27561">
    <groups>
    </groups>
    <test started-at="2024-04-09T09:42:01 PDT" name="oneTest" finished-at="2024-04-09T09:42:16 PDT" duration-ms="14974">
      <class name="Tests.TestOne">
        <test-method signature="one()[pri:0, instance:Tests.TestOne@24959ca4]" started-at="2024-04-09T09:42:01 PDT" name="one" finished-at="2024-04-09T09:42:15 PDT" duration-ms="14316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- one -->
        <test-method is-config="true" signature="closure()[pri:0, instance:Tests.TestOne@24959ca4]" started-at="2024-04-09T09:42:15 PDT" name="closure" finished-at="2024-04-09T09:42:16 PDT" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- Tests.TestOne -->
    </test> <!-- oneTest -->
    <test started-at="2024-04-09T09:42:01 PDT" name="twoTest" finished-at="2024-04-09T09:42:16 PDT" duration-ms="14973">
      <class name="Tests.TestTwo">
        <test-method signature="two()[pri:0, instance:Tests.TestTwo@75c56eb9]" started-at="2024-04-09T09:42:01 PDT" name="two" finished-at="2024-04-09T09:42:13 PDT" duration-ms="12159" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Tests.TestTwo.two(TestTwo.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- two -->
        <test-method is-config="true" signature="closure()[pri:0, instance:Tests.TestTwo@75c56eb9]" started-at="2024-04-09T09:42:15 PDT" name="closure" finished-at="2024-04-09T09:42:16 PDT" duration-ms="977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- Tests.TestTwo -->
    </test> <!-- twoTest -->
    <test started-at="2024-04-09T09:42:01 PDT" name="loginTest" finished-at="2024-04-09T09:42:28 PDT" duration-ms="27559">
      <class name="Tests.Login">
        <test-method signature="tutorials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Tests.Login@16c069df]" started-at="2024-04-09T09:42:01 PDT" name="tutorials" data-provider="DataDriven" finished-at="2024-04-09T09:42:19 PDT" duration-ms="18216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manojcj@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Succesful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tutorials -->
        <test-method is-config="true" signature="closure()[pri:0, instance:Tests.Login@16c069df]" started-at="2024-04-09T09:42:19 PDT" name="closure" finished-at="2024-04-09T09:42:19 PDT" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method signature="tutorials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Tests.Login@16c069df]" started-at="2024-04-09T09:42:19 PDT" name="tutorials" data-provider="DataDriven" finished-at="2024-04-09T09:42:28 PDT" duration-ms="8557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manoj151@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[651645dduvb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tutorials -->
        <test-method is-config="true" signature="closure()[pri:0, instance:Tests.Login@16c069df]" started-at="2024-04-09T09:42:28 PDT" name="closure" finished-at="2024-04-09T09:42:28 PDT" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- Tests.Login -->
    </test> <!-- loginTest -->
  </suite> <!-- Suite -->
</testng-results>
